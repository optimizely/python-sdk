dist: focal
language: python
python:
  - "pypy3.7-7.3.5"
  - "3.7"
  - "3.8"
  - "3.9"
  - "3.10.0"
before_install: "python -m pip install --upgrade pip"
install: "pip install -r requirements/core.txt;pip install -r requirements/test.txt"
script: "pytest --cov=optimizely"
after_success:
  - coveralls

# Linting and Integration tests need to run first to reset the PR build status to pending.
stages:
  - 'Source Clear'
  - 'Lint markdown files'
  - 'Linting'
  - 'Integration tests'
  - 'Full stack production tests'
  - 'Test'

jobs:
  include:
    - stage: 'Lint markdown files'
      os: linux
      language: generic
      install: gem install awesome_bot
      script:
        - find . -type f -name '*.md' -exec awesome_bot {} \;
      notifications:
        email: false

    - stage: 'Linting'
      language: python
      python: "3.9"
      # flake8 version should be same as the version in requirements/test.txt
      # to avoid lint errors on CI
      install: "pip install flake8>=4.1.0"
      script: "flake8"
      after_success: travis_terminate 0
    
    - &integrationtest
      stage: 'Integration tests'
      merge_mode: replace
      env: SDK=python SDK_BRANCH=$TRAVIS_PULL_REQUEST_BRANCH
      cache: false
      language: minimal
      install: skip
      before_script:
        - mkdir $HOME/travisci-tools && pushd $HOME/travisci-tools && git init && git pull https://$CI_USER_TOKEN@github.com/optimizely/travisci-tools.git && popd
      script:
        - $HOME/travisci-tools/trigger-script-with-status-update.sh
      after_success: travis_terminate 0

    - <<: *integrationtest
      stage: 'Full stack production tests'
      env:
        SDK=python
        SDK_BRANCH=$TRAVIS_PULL_REQUEST_BRANCH
        FULLSTACK_TEST_REPO=ProdTesting
    - stage: 'Test'
      python: "pypy3.7-7.3.5"
#      before_install:
#        - pip install "cryptography>=1.3.4"
    - stage: 'Test'
      python: "3.7"
    - stage: 'Test'
      python: "3.8"
    - stage: 'Test'
      python: "3.9"
    - stage: 'Test'
      python: "3.10.0"

    - stage: 'Source Clear'
      if: type = cron
      addons:
        srcclr: true
      before_install: skip
      install: skip
      before_script: skip
      script: skip
      after_success: skip
